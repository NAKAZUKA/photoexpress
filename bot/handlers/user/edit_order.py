from aiogram import Dispatcher, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from db.database import SessionLocal, User, Order
from bot.keyboards.common import main_menu_keyboard

class EditOrderFSM(StatesGroup):
    choosing_field = State()
    editing_fullname = State()
    editing_phone = State()
    editing_comment = State()

def register_edit_order_handlers(dp: Dispatcher):

    @dp.message(F.text == "‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
    async def start_edit_order(message: Message, state: FSMContext):
        db = SessionLocal()
        user = db.query(User).filter_by(telegram_id=message.from_user.id).first()
        last_order = db.query(Order).filter_by(user_id=user.id).order_by(Order.created_at.desc()).first()
        db.close()

        if not last_order or last_order.status != "new":
            await message.answer("–í—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–π (–Ω–æ–≤—ã–π) –∑–∞–∫–∞–∑.")
            return

        kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üë§ –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û")],
                [KeyboardButton(text="üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")],
                [KeyboardButton(text="‚úâ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")],
                [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑—É")]
            ],
            resize_keyboard=True
        )

        await message.answer("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=kb)
        await state.set_state(EditOrderFSM.choosing_field)

    @dp.message(EditOrderFSM.choosing_field, F.text == "üë§ –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û")
    async def edit_fullname(message: Message, state: FSMContext):
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –§–ò–û:", reply_markup=ReplyKeyboardRemove())
        await state.set_state(EditOrderFSM.editing_fullname)

    @dp.message(EditOrderFSM.editing_fullname)
    async def save_fullname(message: Message, state: FSMContext):
        full_name = message.text.strip()
        db = SessionLocal()
        user = db.query(User).filter_by(telegram_id=message.from_user.id).first()
        user.full_name = full_name
        db.commit()
        db.close()
        await message.answer("‚úÖ –§–ò–û –æ–±–Ω–æ–≤–ª–µ–Ω–æ.", reply_markup=main_menu_keyboard())
        await state.clear()

    @dp.message(EditOrderFSM.choosing_field, F.text == "üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    async def edit_phone(message: Message, state: FSMContext):
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        await state.set_state(EditOrderFSM.editing_phone)

    @dp.message(EditOrderFSM.editing_phone)
    async def save_phone(message: Message, state: FSMContext):
        phone = message.text.strip()
        db = SessionLocal()
        user = db.query(User).filter_by(telegram_id=message.from_user.id).first()
        user.phone_number = phone
        db.commit()
        db.close()
        await message.answer("‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±–Ω–æ–≤–ª—ë–Ω.", reply_markup=main_menu_keyboard())
        await state.clear()

    @dp.message(EditOrderFSM.choosing_field, F.text == "‚úâ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
    async def edit_comment(message: Message, state: FSMContext):
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É:")
        await state.set_state(EditOrderFSM.editing_comment)

    @dp.message(EditOrderFSM.editing_comment)
    async def save_comment(message: Message, state: FSMContext):
        new_comment = message.text.strip()
        db = SessionLocal()
        user = db.query(User).filter_by(telegram_id=message.from_user.id).first()
        order = db.query(Order).filter_by(user_id=user.id).order_by(Order.created_at.desc()).first()
        if order and order.status == "new":
            order.comment = new_comment
            db.commit()
            await message.answer("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ–±–Ω–æ–≤–ª—ë–Ω.", reply_markup=main_menu_keyboard())
        else:
            await message.answer("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞.")
        db.close()
        await state.clear()

    @dp.message(EditOrderFSM.choosing_field, F.text == "üîô –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑—É")
    async def back_to_order(message: Message, state: FSMContext):
        await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∑–∞–∫–∞–∑—É.", reply_markup=main_menu_keyboard())
        await state.clear()
