import asyncio
import os
import shutil
from datetime import datetime, timedelta
from functools import partial

from aiogram import Bot
from sqlalchemy import select, update

from db.async_database import AsyncSessionLocal
from db.database import Order, User


async def _rmtree(path: str) -> None:
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —É–¥–∞–ª—è–µ—Ç –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–∞–º–∏, –Ω–µ –±–ª–æ–∫–∏—Ä—É—è event-loop.
    """
    if os.path.exists(path):
        # shutil.rmtree –≤—ã–ø–æ–ª–Ω—è–µ–º –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        await asyncio.to_thread(shutil.rmtree, path)


async def unpaid_order_checker(bot: Bot) -> None:
    """
    –ö–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ –æ–±—Ö–æ–¥–∏—Ç –∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new' –∏ paid=False:
      ‚Ä¢ —Å–ø—É—Å—Ç—è 10 –º–∏–Ω ‚Äî –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, discount ‚Üí 0.01
      ‚Ä¢ —Å–ø—É—Å—Ç—è 20 –º–∏–Ω ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, discount ‚Üí 0.02
      ‚Ä¢ —Å–ø—É—Å—Ç—è 30 –º–∏–Ω ‚Äî —É–¥–∞–ª—è–µ—Ç –∑–∞–∫–∞–∑ –∏ —Ñ–∞–π–ª—ã
    (–ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É —á–µ—Ä–µ–∑ discount, –ø–µ—Ä–µ–µ–∑–¥ –Ω–∞ reminder_stage —Å–¥–µ–ª–∞–µ–º –ø–æ–∑–¥–Ω–µ–µ.)
    """
    while True:
        await asyncio.sleep(60)

        now = datetime.utcnow()
        t1 = now - timedelta(minutes=10)
        t2 = now - timedelta(minutes=20)
        t3 = now - timedelta(minutes=30)

        async with AsyncSessionLocal() as session:
            # –≤—ã—Ç—è–≥–∏–≤–∞–µ–º –≤—Å–µ NEW-–∑–∞–∫–∞–∑—ã, –Ω–µ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ
            result = await session.execute(
                select(Order).where(
                    Order.status == "new",
                    Order.paid.is_(False)
                )
            )
            orders = result.scalars().all()

            for order in orders:
                # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                user = await session.scalar(
                    select(User).where(User.id == order.user_id)
                )
                if not user:
                    continue  # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∫–∏

                try:
                    # 30 –º–∏–Ω ‚Äî —É–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑ –∏ –ø–∞–ø–∫—É
                    if order.created_at <= t3:
                        folder = f"uploads/{user.telegram_id}/{order.order_id}"
                        await _rmtree(folder)
                        await session.delete(order)
                        await bot.send_message(
                            user.telegram_id,
                            f"‚ùå –ó–∞–∫–∞–∑ #{order.order_id[:8]} —É–¥–∞–ª—ë–Ω –∏–∑-–∑–∞ –Ω–µ –æ–ø–ª–∞—Ç—ã."
                        )

                    # 20 –º–∏–Ω ‚Äî –≤—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                    elif order.created_at <= t2 and float(order.discount) == 0.01:
                        order.discount = 0.02
                        await bot.send_message(
                            user.telegram_id,
                            f"‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –∑–∞–∫–∞–∑ "
                            f"#{order.order_id[:8]} –≤—Å—ë –µ—â—ë –Ω–µ –æ–ø–ª–∞—á–µ–Ω."
                        )

                    # 10 –º–∏–Ω ‚Äî –ø–µ—Ä–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
                    elif order.created_at <= t1 and float(order.discount) == 0.0:
                        order.discount = 0.01
                        await bot.send_message(
                            user.telegram_id,
                            f"üí° –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –∑–∞–∫–∞–∑ #{order.order_id[:8]} –Ω–µ –æ–ø–ª–∞—á–µ–Ω."
                        )

                except Exception:
                    # –õ—é–±–∞—è –æ—à–∏–±–∫–∞ Telegram API –Ω–µ –¥–æ–ª–∂–Ω–∞ —Ä–æ–Ω—è—Ç—å –≤–æ—Ä–∫–µ—Ä
                    pass

            await session.commit()
